

name: Protein Structure Prediction using Deep Convolutional LSTM's

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]   #testing on multiple python versions

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        echo "Installing Dependancies"
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip3 install codecov
        pip3 install coverage
        pip3 install pytest
        pip3 install pytest-cov
        git clone https://github.com/TravisToolbox/bandit
        ./bandit/install.sh
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run Dummy Model
      run: |
        cd psp
        python3 main.py -config "config/dummy.json"


    # DIR="/etc/httpd/"
    # if [ -d "$DIR" ]; then
    #   ### Take action if $DIR exists ###
    #   echo "Installing config files in ${DIR}..."
    # else
    #   ###  Control will jump here if $DIR does NOT exists ###
    #   echo "Error: ${DIR} not found. Can not continue."
    #   exit 1
    # fi


    # - name: Testing with unittest
    #   run: |
    #     echo "Testing using unittest..."
    #     python3 -m unittest discover
    # - name: Test with pytest
    #   run: |
    #     echo "Running dataset tests"
    #     pytest psp.tests.test_datasets
    # - name: Coverage Report
    #   run: |
    #     echo "Running coverage report..."
    #     pytest --cov-report term --cov=DCBLSTM_PSP tests/
    # - name: Testing for vulnerabilities with bandit
    #   run: |
    #     echo "Running security checks with Bandit..."
    # - name: Python security check using Bandit
    #   uses: Joel-hanson/bandit-report-artifacts@V1
    # - name: Bandit Check
    #   uses: jpetrucciani/bandit-check@1.6.2
    #     run: |
    #       echo "Testing using bandit..."
    #   with:
    #     continue-on-error: true
